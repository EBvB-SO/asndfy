"""initial schema

Revision ID: ad944b57ed89
Revises: f53fc52e357d
Create Date: 2025-06-03 19:49:46.732321

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad944b57ed89'
down_revision: Union[str, None] = 'f53fc52e357d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badge_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_badge_categories_id'), 'badge_categories', ['id'], unique=False)
    op.create_table('db_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('id = 1', name='single_row_constraint'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('time_required', sa.Integer(), nullable=True),
    sa.Column('required_facilities', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon_name', sa.String(length=100), nullable=False),
    sa.Column('how_to_earn', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['badge_categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_badges_id'), 'badges', ['id'], unique=False)
    op.create_table('daily_notes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_daily_notes_date', 'daily_notes', ['date'], unique=False)
    op.create_index('idx_daily_notes_user_id', 'daily_notes', ['user_id'], unique=False)
    op.create_table('exercise_targets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('target', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_targets_id'), 'exercise_targets', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('route_name', sa.String(length=255), nullable=False),
    sa.Column('grade', sa.String(length=50), nullable=False),
    sa.Column('crag', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('route_angle', sa.String(length=50), nullable=False),
    sa.Column('route_length', sa.String(length=50), nullable=False),
    sa.Column('hold_type', sa.String(length=50), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_plans',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('route_name', sa.String(length=255), nullable=False),
    sa.Column('grade', sa.String(length=50), nullable=False),
    sa.Column('route_overview', sa.Text(), nullable=True),
    sa.Column('training_overview', sa.Text(), nullable=True),
    sa.Column('purchased_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_climbing_grade', sa.String(length=50), nullable=True),
    sa.Column('max_boulder_grade', sa.String(length=50), nullable=True),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('training_experience', sa.Text(), nullable=True),
    sa.Column('perceived_strengths', sa.Text(), nullable=True),
    sa.Column('perceived_weaknesses', sa.Text(), nullable=True),
    sa.Column('attribute_ratings', sa.Text(), nullable=True),
    sa.Column('weeks_to_train', sa.String(length=50), nullable=True),
    sa.Column('sessions_per_week', sa.String(length=50), nullable=True),
    sa.Column('time_per_session', sa.String(length=50), nullable=True),
    sa.Column('training_facilities', sa.Text(), nullable=True),
    sa.Column('injury_history', sa.Text(), nullable=True),
    sa.Column('general_fitness', sa.String(length=100), nullable=True),
    sa.Column('height', sa.String(length=50), nullable=True),
    sa.Column('weight', sa.String(length=50), nullable=True),
    sa.Column('age', sa.String(length=50), nullable=True),
    sa.Column('preferred_climbing_style', sa.Text(), nullable=True),
    sa.Column('indoor_vs_outdoor', sa.String(length=50), nullable=True),
    sa.Column('onsight_flash_level', sa.String(length=50), nullable=True),
    sa.Column('redpointing_experience', sa.Text(), nullable=True),
    sa.Column('sleep_recovery', sa.String(length=50), nullable=True),
    sa.Column('work_life_balance', sa.String(length=100), nullable=True),
    sa.Column('fear_factors', sa.Text(), nullable=True),
    sa.Column('mindfulness_practices', sa.Text(), nullable=True),
    sa.Column('motivation_level', sa.String(length=50), nullable=True),
    sa.Column('access_to_coaches', sa.String(length=50), nullable=True),
    sa.Column('time_for_cross_training', sa.String(length=50), nullable=True),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('plan_phases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.String(length=36), nullable=False),
    sa.Column('phase_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('phase_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plan_phases_id'), 'plan_phases', ['id'], unique=False)
    op.create_table('project_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session_tracking',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.String(length=36), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.String(length=50), nullable=False),
    sa.Column('focus_name', sa.String(length=255), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_tracking_plan_id', 'session_tracking', ['plan_id'], unique=False)
    op.create_index('idx_session_tracking_user_id', 'session_tracking', ['user_id'], unique=False)
    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_badges_unique', 'user_badges', ['user_id', 'badge_id'], unique=True)
    op.create_index(op.f('ix_user_badges_id'), 'user_badges', ['id'], unique=False)
    op.create_table('exercise_tracking',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('exercise_id', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['session_tracking.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_exercise_tracking_exercise_id', 'exercise_tracking', ['exercise_id'], unique=False)
    op.create_index('idx_exercise_tracking_plan_id', 'exercise_tracking', ['plan_id'], unique=False)
    op.create_index('idx_exercise_tracking_session_id', 'exercise_tracking', ['session_id'], unique=False)
    op.create_index('idx_exercise_tracking_user_id', 'exercise_tracking', ['user_id'], unique=False)
    op.create_table('pending_session_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_synced', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['session_tracking.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pending_session_updates_id'), 'pending_session_updates', ['id'], unique=False)
    op.create_table('plan_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.String(length=50), nullable=False),
    sa.Column('focus', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('session_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['phase_id'], ['plan_phases.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plan_sessions_id'), 'plan_sessions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plan_sessions_id'), table_name='plan_sessions')
    op.drop_table('plan_sessions')
    op.drop_index(op.f('ix_pending_session_updates_id'), table_name='pending_session_updates')
    op.drop_table('pending_session_updates')
    op.drop_index('idx_exercise_tracking_user_id', table_name='exercise_tracking')
    op.drop_index('idx_exercise_tracking_session_id', table_name='exercise_tracking')
    op.drop_index('idx_exercise_tracking_plan_id', table_name='exercise_tracking')
    op.drop_index('idx_exercise_tracking_exercise_id', table_name='exercise_tracking')
    op.drop_table('exercise_tracking')
    op.drop_index(op.f('ix_user_badges_id'), table_name='user_badges')
    op.drop_index('idx_user_badges_unique', table_name='user_badges')
    op.drop_table('user_badges')
    op.drop_index('idx_session_tracking_user_id', table_name='session_tracking')
    op.drop_index('idx_session_tracking_plan_id', table_name='session_tracking')
    op.drop_table('session_tracking')
    op.drop_table('project_logs')
    op.drop_index(op.f('ix_plan_phases_id'), table_name='plan_phases')
    op.drop_table('plan_phases')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_table('training_plans')
    op.drop_table('projects')
    op.drop_index(op.f('ix_exercise_targets_id'), table_name='exercise_targets')
    op.drop_table('exercise_targets')
    op.drop_index('idx_daily_notes_user_id', table_name='daily_notes')
    op.drop_index('idx_daily_notes_date', table_name='daily_notes')
    op.drop_table('daily_notes')
    op.drop_index(op.f('ix_badges_id'), table_name='badges')
    op.drop_table('badges')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.drop_table('exercises')
    op.drop_table('db_version')
    op.drop_index(op.f('ix_badge_categories_id'), table_name='badge_categories')
    op.drop_table('badge_categories')
    # ### end Alembic commands ###
