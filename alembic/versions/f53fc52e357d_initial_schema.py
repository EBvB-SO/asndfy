"""initial schema

Revision ID: f53fc52e357d
Revises: 
Create Date: 2025-06-03 19:39:08.460739

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f53fc52e357d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_plan_sessions_id', table_name='plan_sessions')
    op.drop_table('plan_sessions')
    op.drop_table('db_version')
    op.drop_index('ix_exercises_id', table_name='exercises')
    op.drop_table('exercises')
    op.drop_index('idx_daily_notes_date', table_name='daily_notes')
    op.drop_index('idx_daily_notes_user_id', table_name='daily_notes')
    op.drop_table('daily_notes')
    op.drop_index('ix_user_profiles_id', table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_table('project_logs')
    op.drop_table('projects')
    op.drop_index('ix_badge_categories_id', table_name='badge_categories')
    op.drop_table('badge_categories')
    op.drop_index('idx_exercise_tracking_exercise_id', table_name='exercise_tracking')
    op.drop_index('idx_exercise_tracking_plan_id', table_name='exercise_tracking')
    op.drop_index('idx_exercise_tracking_session_id', table_name='exercise_tracking')
    op.drop_index('idx_exercise_tracking_user_id', table_name='exercise_tracking')
    op.drop_table('exercise_tracking')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_exercise_targets_id', table_name='exercise_targets')
    op.drop_table('exercise_targets')
    op.drop_index('idx_user_badges_unique', table_name='user_badges')
    op.drop_index('ix_user_badges_id', table_name='user_badges')
    op.drop_table('user_badges')
    op.drop_table('training_plans')
    op.drop_index('idx_session_tracking_plan_id', table_name='session_tracking')
    op.drop_index('idx_session_tracking_user_id', table_name='session_tracking')
    op.drop_table('session_tracking')
    op.drop_index('ix_pending_session_updates_id', table_name='pending_session_updates')
    op.drop_table('pending_session_updates')
    op.drop_index('ix_plan_phases_id', table_name='plan_phases')
    op.drop_table('plan_phases')
    op.drop_index('ix_badges_id', table_name='badges')
    op.drop_table('badges')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('badges_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('icon_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('how_to_earn', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['badge_categories.id'], name='badges_category_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='badges_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_badges_id', 'badges', ['id'], unique=False)
    op.create_table('plan_phases',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('plan_phases_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('plan_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('phase_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('phase_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], name='plan_phases_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='plan_phases_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_plan_phases_id', 'plan_phases', ['id'], unique=False)
    op.create_table('pending_session_updates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plan_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_synced', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], name='pending_session_updates_plan_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['session_tracking.id'], name='pending_session_updates_session_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='pending_session_updates_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pending_session_updates_pkey')
    )
    op.create_index('ix_pending_session_updates_id', 'pending_session_updates', ['id'], unique=False)
    op.create_table('session_tracking',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plan_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('week_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('day_of_week', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('focus_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('completion_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], name='session_tracking_plan_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='session_tracking_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='session_tracking_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_session_tracking_user_id', 'session_tracking', ['user_id'], unique=False)
    op.create_index('idx_session_tracking_plan_id', 'session_tracking', ['plan_id'], unique=False)
    op.create_table('training_plans',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('grade', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('route_overview', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('training_overview', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('purchased_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='training_plans_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='training_plans_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_badges',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('badge_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('earned_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], name='user_badges_badge_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_badges_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_badges_pkey')
    )
    op.create_index('ix_user_badges_id', 'user_badges', ['id'], unique=False)
    op.create_index('idx_user_badges_unique', 'user_badges', ['user_id', 'badge_id'], unique=True)
    op.create_table('exercise_targets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('exercise_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('target', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name='exercise_targets_exercise_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='exercise_targets_pkey')
    )
    op.create_index('ix_exercise_targets_id', 'exercise_targets', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('exercise_tracking',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plan_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('exercise_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], name='exercise_tracking_plan_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['session_tracking.id'], name='exercise_tracking_session_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='exercise_tracking_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='exercise_tracking_pkey')
    )
    op.create_index('idx_exercise_tracking_user_id', 'exercise_tracking', ['user_id'], unique=False)
    op.create_index('idx_exercise_tracking_session_id', 'exercise_tracking', ['session_id'], unique=False)
    op.create_index('idx_exercise_tracking_plan_id', 'exercise_tracking', ['plan_id'], unique=False)
    op.create_index('idx_exercise_tracking_exercise_id', 'exercise_tracking', ['exercise_id'], unique=False)
    op.create_table('badge_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='badge_categories_pkey'),
    sa.UniqueConstraint('name', name='badge_categories_name_key')
    )
    op.create_index('ix_badge_categories_id', 'badge_categories', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('grade', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('crag', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('route_angle', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('route_length', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('hold_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('completion_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='projects_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_logs',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('mood', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_logs_project_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='project_logs_pkey')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_climbing_grade', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('max_boulder_grade', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('goal', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('training_experience', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('perceived_strengths', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('perceived_weaknesses', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('attribute_ratings', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('weeks_to_train', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sessions_per_week', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('time_per_session', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('training_facilities', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('injury_history', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('general_fitness', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('height', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('weight', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('age', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('preferred_climbing_style', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('indoor_vs_outdoor', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('onsight_flash_level', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('redpointing_experience', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sleep_recovery', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('work_life_balance', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fear_factors', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mindfulness_practices', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('motivation_level', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('access_to_coaches', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('time_for_cross_training', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('additional_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_profiles_pkey'),
    sa.UniqueConstraint('user_id', name='user_profiles_user_id_key')
    )
    op.create_index('ix_user_profiles_id', 'user_profiles', ['id'], unique=False)
    op.create_table('daily_notes',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='daily_notes_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='daily_notes_pkey')
    )
    op.create_index('idx_daily_notes_user_id', 'daily_notes', ['user_id'], unique=False)
    op.create_index('idx_daily_notes_date', 'daily_notes', ['date'], unique=False)
    op.create_table('exercises',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('time_required', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('required_facilities', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='exercises_pkey')
    )
    op.create_index('ix_exercises_id', 'exercises', ['id'], unique=False)
    op.create_table('db_version',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.CheckConstraint('id = 1', name='single_row_constraint'),
    sa.PrimaryKeyConstraint('id', name='db_version_pkey')
    )
    op.create_table('plan_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('day', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('focus', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('session_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['phase_id'], ['plan_phases.id'], name='plan_sessions_phase_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='plan_sessions_pkey')
    )
    op.create_index('ix_plan_sessions_id', 'plan_sessions', ['id'], unique=False)
    # ### end Alembic commands ###
